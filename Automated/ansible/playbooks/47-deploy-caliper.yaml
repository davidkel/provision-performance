#!/usr/bin/env ansible-playbook

- name: Checkout caliper benchmarks
  hosts: clients
  remote_user: root

  tasks:
    - name: Checkout to the {{ benchBranch }} branch
      git:
        dest: '{{ benchDest }}'
        repo: '{{ benchRepo }}'
        version: '{{ benchBranch }}'
        update: yes

- name: Deploy caliper to clients
  remote_user: root
  hosts: clients

  tasks:
  - name: Install caliper cli to {{ benchDest }}
    npm:
      name: '@hyperledger/caliper-cli'
      version: '0.5.0'
      path: '{{ benchDest }}'
      production: yes

  - name: Install grpc-js to {{ benchDest }}
    npm:
      name: '@grpc/grpc-js'
      version: '1.6.7'
      path: '{{ benchDest }}'
      production: yes

  - name: Install thin node client to {{ benchDest }}
    npm:
      name: '@hyperledger/fabric-gateway'
      version: '1.1.0'
      path: '{{ benchDest }}'
      production: yes


# Deploy mosquitto to caliper manager client
- hosts: client0
  remote_user: root
  tasks:
  - name: Pull down mosquitto
    docker_image:
      name: eclipse-mosquitto:latest
      source: pull

  - name: Copy the mosquitto config
    copy:
      src: ./static-files/mosquitto
      dest: /root

- name: copy useful files to manager and worker
  hosts: clients
  remote_user: root
  roles:
    - util/orgvars

  tasks:
  - name: create Manager directory
    file:
      path: /root/Manager
      state: directory
      mode: '0755'
    when: 'inventory_hostname == "client0"'

  - name: copy Manager files
    copy:
      src: ./static-files/Manager
      dest: /root
      mode: preserve
    when: 'inventory_hostname == "client0"'

  - name: create Worker directory
    file:
      path: /root/Worker
      state: directory
      mode: '0755'

  - name: copy Worker files
    copy:
      src: ./static-files/Worker
      dest: /root
      mode: preserve

  - name: Generate SUT Network file
    vars:
      first_peer_org: '{{ orgvars_peerOrgsList | first }}'
      first_peer: '{{ groups[first_peer_org] | first }}'

    template:
      dest: /root/Worker/sut-network.yaml
      src: ./templates/sut-network.yaml.j2

